[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "rpa-monitoramento"
version = "1.0.0"
description = "Sistema completo de monitoramento e orquestração de robôs RPA"
authors = [
    {name = "Sistema RPA", email = "dev@rpa.local"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/rpa-monitoramento/rpa-system"
Repository = "https://github.com/rpa-monitoramento/rpa-system"
Documentation = "https://github.com/rpa-monitoramento/rpa-system/blob/main/README.md"
"Bug Tracker" = "https://github.com/rpa-monitoramento/rpa-system/issues"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
    | node_modules
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [
    "migrations",
    "node_modules",
    ".venv",
    "venv",
    ".git",
    "__pycache__",
]

[tool.flake8]
max-line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "migrations",
    "node_modules",
    ".venv",
    "venv",
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "migrations/",
    "node_modules/",
    ".venv/",
    "venv/",
]

[[tool.mypy.overrides]]
module = [
    "django.*",
    "rest_framework.*",
    "celery.*",
    "redis.*",
    "psycopg2.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "app.settings.base"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["server/app"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["server/app"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/node_modules/*",
    "manage.py",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = [
    "tests",
    "migrations",
    "node_modules",
    ".venv",
    "venv",
]
skips = ["B101", "B601"]
