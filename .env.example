# RPA Monitor - Configuração de Ambiente

# =============================================================================
# BACKEND CONFIGURATION
# =============================================================================

# Server settings
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000

# Security
SECRET_KEY=mude-esta-chave-para-uma-mais-segura-em-producao
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS settings (adicione seus domínios de produção)
CORS_ORIGINS=http://localhost:5000,http://localhost:5173,http://localhost

# Environment
ENV=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL settings
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_DB=rpa_monitor
POSTGRES_USER=rpa_user
POSTGRES_PASSWORD=rpa_password

# Database URL (usado pelo backend)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis settings
REDIS_PASSWORD=redis_password
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0

# =============================================================================
# TELEGRAM CONFIGURATION
# =============================================================================

# Telegram bot settings (opcionais - podem ser configurados via interface)
DEFAULT_TELEGRAM_BOT_TOKEN=
DEFAULT_TELEGRAM_CHAT_ID=

# Para obter um token do Telegram:
# 1. Converse com @BotFather no Telegram
# 2. Use o comando /newbot
# 3. Siga as instruções para criar seu bot
# 4. Copie o token fornecido

# Para obter o Chat ID:
# 1. Adicione seu bot a um grupo ou converse diretamente com ele
# 2. Envie uma mensagem para o bot
# 3. Acesse: https://api.telegram.org/bot<SEU_TOKEN>/getUpdates
# 4. Encontre o "chat" > "id" na resposta

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Vite settings
VITE_API_URL=/api

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Grafana settings
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin123

# Prometheus settings
PROMETHEUS_SCRAPE_PATH=/metrics

# Loki settings
LOKI_URL=http://loki:3100

# =============================================================================
# DEMO ROBOT CONFIGURATION
# =============================================================================

# Configurações do robô de demonstração
DEMO_ROBOT_SLUG=robo-demo
DEMO_ROBOT_NAME=Robô Demo
DEMO_HEARTBEAT_INTERVAL=5

# =============================================================================
# SSL/TLS CONFIGURATION (OPCIONAL)
# =============================================================================

# Para produção com HTTPS, configure estes caminhos
# SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
# SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# =============================================================================
# BACKUP CONFIGURATION (OPCIONAL)
# =============================================================================

# Configurações de backup do banco de dados
# BACKUP_ENABLED=true
# BACKUP_SCHEDULE="0 2 * * *"  # Todo dia às 2h
# BACKUP_RETENTION_DAYS=7
# BACKUP_S3_BUCKET=
# BACKUP_S3_REGION=
# BACKUP_S3_ACCESS_KEY=
# BACKUP_S3_SECRET_KEY=

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Estrutura de logs
LOG_FORMAT=json

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# Rate limiting settings (requests per second)
API_RATE_LIMIT=20
LOGIN_RATE_LIMIT_PER_MINUTE=5

# =============================================================================
# PRODUCTION NOTES
# =============================================================================

# IMPORTANTE PARA PRODUÇÃO:
# 1. Mude todas as senhas padrão (SECRET_KEY, POSTGRES_PASSWORD, REDIS_PASSWORD, GRAFANA_PASSWORD)
# 2. Configure CORS_ORIGINS com seus domínios reais
# 3. Use HTTPS em produção (configure SSL/TLS)
# 4. Configure backups regulares do banco de dados
# 5. Configure alertas no Grafana
# 6. Monitore os logs regularmente
# 7. Mantenha o sistema atualizado

# REDE:
# Certifique-se de que as portas estão configuradas corretamente:
# - 80/443: Nginx (HTTP/HTTPS)
# - 8000: Backend API (interno)
# - 5432: PostgreSQL (interno)
# - 6379: Redis (interno)
# - 9090: Prometheus (interno ou restrito)
# - 3000: Grafana (interno ou restrito)
# - 3100: Loki (interno)

# RECURSOS:
# Configure limites de recursos apropriados para cada container em produção
# Monitore uso de CPU, memória e disco regularmente
